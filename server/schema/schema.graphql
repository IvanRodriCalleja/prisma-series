### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Actor {
  character: Character!
  id: Int!
  image: Image!
  name: String!
}

input ActorFilter {
  every: ActorWhereInput
  none: ActorWhereInput
  some: ActorWhereInput
}

input ActorWhereInput {
  AND: [ActorWhereInput!]
  character: CharacterWhereInput
  id: IntFilter
  image: ImageWhereInput
  name: StringFilter
  NOT: [ActorWhereInput!]
  OR: [ActorWhereInput!]
  serie: SerieWhereInput
  serieId: IntFilter
}

input ActorWhereUniqueInput {
  id: Int
}

type Character {
  id: Int!
  image: Image!
  name: String!
}

input CharacterWhereInput {
  actor: ActorWhereInput
  actorId: IntFilter
  AND: [CharacterWhereInput!]
  id: IntFilter
  image: ImageWhereInput
  name: StringFilter
  NOT: [CharacterWhereInput!]
  OR: [CharacterWhereInput!]
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

type Episode {
  id: Int!
  image: Image!
  title: String!
}

input EpisodeFilter {
  every: EpisodeWhereInput
  none: EpisodeWhereInput
  some: EpisodeWhereInput
}

input EpisodeWhereInput {
  AND: [EpisodeWhereInput!]
  id: IntFilter
  image: ImageWhereInput
  NOT: [EpisodeWhereInput!]
  OR: [EpisodeWhereInput!]
  season: SeasonWhereInput
  seasonId: IntFilter
  title: StringFilter
}

input EpisodeWhereUniqueInput {
  id: Int
}

type Image {
  medium: String!
  original: String!
}

input ImageWhereInput {
  actor: ActorWhereInput
  actorId: NullableIntFilter
  AND: [ImageWhereInput!]
  character: CharacterWhereInput
  characterId: NullableIntFilter
  createdAt: DateTimeFilter
  episode: EpisodeWhereInput
  episodeId: NullableIntFilter
  id: IntFilter
  medium: StringFilter
  NOT: [ImageWhereInput!]
  OR: [ImageWhereInput!]
  original: StringFilter
  serie: SerieWhereInput
  serieId: NullableIntFilter
  updatedAt: DateTimeFilter
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

input NullableIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

enum OrderByArg {
  asc
  desc
}

type Query {
  serie(where: SerieWhereUniqueInput!): Serie
  series(after: SerieWhereUniqueInput, before: SerieWhereUniqueInput, first: Int, last: Int, orderBy: SerieOrderByInput, skip: Int, where: SerieWhereInput): [Serie!]!
}

type Season {
  episodes(after: EpisodeWhereUniqueInput, before: EpisodeWhereUniqueInput, first: Int, last: Int, skip: Int): [Episode!]!
  id: Int!
  seasonNumber: Int!
}

input SeasonFilter {
  every: SeasonWhereInput
  none: SeasonWhereInput
  some: SeasonWhereInput
}

input SeasonWhereInput {
  AND: [SeasonWhereInput!]
  episodes: EpisodeFilter
  id: IntFilter
  NOT: [SeasonWhereInput!]
  OR: [SeasonWhereInput!]
  seasonNumber: IntFilter
  serie: SerieWhereInput
  serieId: IntFilter
}

input SeasonWhereUniqueInput {
  id: Int
}

type Serie {
  actors(after: ActorWhereUniqueInput, before: ActorWhereUniqueInput, first: Int, last: Int, skip: Int): [Actor!]!
  id: Int!
  image: Image!
  language: String!
  seasons(after: SeasonWhereUniqueInput, before: SeasonWhereUniqueInput, first: Int, last: Int, skip: Int): [Season!]!
  title: String!
}

input SerieOrderByInput {
  createdAt: OrderByArg
  id: OrderByArg
  language: OrderByArg
  title: OrderByArg
  updatedAt: OrderByArg
}

input SerieWhereInput {
  actors: ActorFilter
  AND: [SerieWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  image: ImageWhereInput
  language: StringFilter
  NOT: [SerieWhereInput!]
  OR: [SerieWhereInput!]
  seasons: SeasonFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input SerieWhereUniqueInput {
  id: Int
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}
